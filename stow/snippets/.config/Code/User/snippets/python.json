{
	"bang": {
		"prefix": "bang",
		"body": [
			"#!/usr/bin/env python3",
		]
	},
	"logger": {
		"prefix": "implog",
		"body": [
			"from logging import getLogger",
			"logger = getLogger(name=__name__)"
		]
	},
	"datetime": {
		"prefix": "impdatetime",
		"body": [
			"from datetime import datetime"
		]
	},
	"bs4": {
		"prefix": "impbs4",
		"body": [
			"from bs4 import BeautifulSoup"
		]
	},
	"project_root": {
		"prefix": "project_root",
		"description": "",
		"body": [
			"import os",
			"project_dir = os.path.dirname(__file__)"
		]
	},
	"if(main)": {
		"prefix": "__main__",
		"body": [
			"if __name__ == \"__main__\":",
			"    ${1:pass}"
		],
		"description": "Code snippet for a `if __name__ == \"__main__\": ...` block"
	},
	"class": {
		"prefix": "class",
		"body": [
			"class ${1:classname}(${2:object}):",
			"\t${3:pass}"
		],
		"description": "Code snippet for a class definition"
	},
	"lambda": {
		"prefix": "lambda",
		"body": [
			"lambda ${1:parameter_list}: ${2:expression}"
		],
		"description": "Code snippet for a lambda statement"
	},
	"mark/markdown": {
		"prefix": "mark/markdown",
		"body": "# %% [markdown]",
		"description": "Code snippet to add a new markdown cell"
	},
	"with": {
		"prefix": "with",
		"body": [
			"with ${1:expression} as ${2:target}:",
			"\t${3:pass}"
		],
		"description": "Code snippet for a with statement"
	},
	"def": {
		"prefix": "def",
		"body": [
			"def ${1:funcname}(${2:parameter_list}):",
			"\t${3:pass}"
		],
		"description": "Code snippet for a function definition"
	},
	"if": {
		"prefix": "if",
		"body": [
			"if ${1:expression}:",
			"\t${2:pass}"
		],
		"description": "Code snippet for an if statement"
	},
	"if/else": {
		"prefix": "if/else",
		"body": [
			"if ${1:condition}:",
			"\t${2:pass}",
			"else:",
			"\t${3:pass}"
		],
		"description": "Code snippet for an if statement with else"
	},
	"elif": {
		"prefix": "elif",
		"body": [
			"elif ${1:expression}:",
			"\t${2:pass}"
		],
		"description": "Code snippet for an elif"
	},
	"else": {
		"prefix": "else",
		"body": [
			"else:",
			"\t${1:pass}"
		],
		"description": "Code snippet for an else"
	},
	"while": {
		"prefix": "while",
		"body": [
			"while ${1:expression}:",
			"\t${2:pass}"
		],
		"description": "Code snippet for a while loop"
	},
	"while/else": {
		"prefix": "while/else",
		"body": [
			"while ${1:expression}:",
			"\t${2:pass}",
			"else:",
			"\t${3:pass}"
		],
		"description": "Code snippet for a while loop with else"
	},
	"for": {
		"prefix": "for",
		"body": [
			"for ${1:target_list} in ${2:expression_list}:",
			"\t${3:pass}"
		],
		"description": "Code snippet for a for loop"
	},
	"for/else": {
		"prefix": "for/else",
		"body": [
			"for ${1:target_list} in ${2:expression_list}:",
			"\t${3:pass}",
			"else:",
			"\t${4:pass}"
		],
		"description": "Code snippet for a for loop with else"
	},
	"try/except": {
		"prefix": "try/except",
		"body": [
			"try:",
			"\t${1:pass}",
			"except ${2:expression} as ${3:identifier}:",
			"\t${4:pass}"
		],
		"description": "Code snippet for a try/except statement"
	},
	"try/finally": {
		"prefix": "try/finally",
		"body": [
			"try:",
			"\t${1:pass}",
			"finally:",
			"\t${2:pass}"
		],
		"description": "Code snippet for a try/finally statement"
	},
	"try/except/else": {
		"prefix": "try/except/else",
		"body": [
			"try:",
			"\t${1:pass}",
			"except ${2:expression} as ${3:identifier}:",
			"\t${4:pass}",
			"else:",
			"\t${5:pass}"
		],
		"description": "Code snippet for a try/except/else statement"
	},
	"try/except/finally": {
		"prefix": "try/except/finally",
		"body": [
			"try:",
			"\t${1:pass}",
			"except ${2:expression} as ${3:identifier}:",
			"\t${4:pass}",
			"finally:",
			"\t${5:pass}"
		],
		"description": "Code snippet for a try/except/finally statement"
	},
	"try/except/else/finally": {
		"prefix": "try/except/else/finally",
		"body": [
			"try:",
			"\t${1:pass}",
			"except ${2:expression} as ${3:identifier}:",
			"\t${4:pass}",
			"else:",
			"\t${5:pass}",
			"finally:",
			"\t${6:pass}"
		],
		"description": "Code snippet for a try/except/else/finally statement"
	},
}